@page "/R"

@using TicTacTorus.Source.Hubs
@using Microsoft.AspNetCore.ProtectedBrowserStorage
@using Microsoft.AspNetCore.SignalR.Client
@using Newtonsoft.Json
@using TicTacTorus.Source
@using TicTacTorus.Source.Generator
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using System.Drawing
@inject ProtectedSessionStorage ProtectedSessionStore
@inject NavigationManager NavigationManager


<div class="d-flex justify-content-center my-5">
    <h1 class="headers">TicTacTorus</h1>
</div>
<div class="col-sm-9 col-md-7 col-lg-6 mx-auto m-2">
    <div class="box-login">
        <div class="container">
            <h4 class="text-center">Sign Up</h4>
            <hr>
            @if (register)
            {
                <h5>@msg</h5>
                register = false;
            }
            <div class="form-group">
                <label for="registerLoginName">Login name*</label>
                <input id="registerLoginName" @bind-value="@userID" 
                           class="form-control" placeholder="Enter login name" required />
            </div>
            <div class="form-group">
                <label for="registerInGameName">In-Game name</label>
                <input id="registerInGameName" @bind-value="@inGameName" 
                           class="form-control" aria-describedby="inGameNameHelp" placeholder="Name In-Game"/>
            </div>
            <div class="form-group">
                <label for="registerPassword">Password*</label>
                <input type="password" id="registerPassword" @bind-value="@password"
                           class="form-control"  placeholder="Password" required/>
            </div>
            <div class="form-group">
                <label for="registerConfirmPassword">Confirm Password*</label>
                <input type="password" id="registerConfirmPassword" @bind-value="@confirmPassword" 
                           class="form-control" placeholder="Password" required/>
            </div>
            <button type="submit" class="btn btn-primary" style="width: 100%" @onclick="TryRegister">Sign Up</button>
        </div>
    </div>
</div>

@code
{
    private ConnectionHubClient _client;
    private string msg;
    private string userID;
    private string inGameName;
    private string password;
    private string confirmPassword;
    private bool register;
}

@functions
{
    
    protected override void OnInitialized()
    {
        _client = new ConnectionHubClient(NavigationManager);

        _client.Connection.On<string>("RegisterSuccess", (message) =>
        {
            msg = message;
            register = true;
            StateHasChanged();
        });

        _client.Connection.On<string>("RegisterFailed", (message) =>
        {
            msg = message;
            register = true;
            StateHasChanged();
        });
    }

    private async Task TryRegister()
    {
        if(password != confirmPassword || userID == null) return;
        var user = new HumanPlayer(userID, inGameName, Color.Black, new byte(), password);
        await _client.Connection.SendAsync("ConfirmRegister", user);
    }

}