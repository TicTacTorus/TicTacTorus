@page "/lobbies" 
@using TicTacTorus.Source.LobbySpecificContent
@using TicTacTorus.Source.Hubs
@using Microsoft.AspNetCore.SignalR.Client
@using Newtonsoft.Json
@using TicTacTorus.Source
@using TicTacTorus.Source.Generator
@using TicTacTorus.Source.PlayerSpecificContent
@using TicTacTorus.Source.ServerHandler
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage ProtectedSessionStore

<div class="my-5 lobbies-grid">
    <button class="btn-back" onclick="location.href ='/';">
        <svg class="bi bi-arrow-left" width="2em" height="2em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" d="M5.854 4.646a.5.5 0 010 .708L3.207 8l2.647 2.646a.5.5 0 01-.708.708l-3-3a.5.5 0 010-.708l3-3a.5.5 0 01.708 0z" clip-rule="evenodd"/>
            <path fill-rule="evenodd" d="M2.5 8a.5.5 0 01.5-.5h10.5a.5.5 0 010 1H3a.5.5 0 01-.5-.5z" clip-rule="evenodd"/>
        </svg>
    </button>
    <h1 class="headers my-auto">TicTacTorus</h1>
    @if (User.ID != null)
    {
        <button @onclick="DirectToAccount" class="btn-back float-right" data-toggle="tooltip" data-placement="bottom" title="Account">
            <svg class="bi bi-person-fill" width="2em" height="2em" viewBox="0 0 16 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path fill-rule="evenodd" d="M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
            </svg>
        </button>
    }
</div>

<div class="d-flex justify-content-center m-1">
    <div class="col-sm-8 col-md-8 col-lg-8 mx-auto m-2">
        <div class="box w-100 h-100 p-3">
            <h3 class="text-center mt-1"><b>Lobbies</b></h3>
            <hr>
            <table id="lobbies">
                <tr id="table-header"><th>Lobby</th><th class="playerCount">Players</th><th class="status">Status</th><th>Description</th></tr>
                @foreach (var lobby in _list.Lobbies)
                {
                    <tr id="lobbyRow" onclick="location.href ='game/@lobby.Id.ToString()';">
                        <td>@lobby.Name</td>
                        <td class="playerCount">@lobby.PlayerCount/@lobby.MaxPlayerCount</td>
                        <td class="status">@lobby.Status</td>
                        <td>@lobby.Description</td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>

@code
{
    private ConnectionHubClient _client;
    private LobbyList _list = new LobbyList();
    private HumanPlayer User { get; set; } = new HumanPlayer();
}

@functions{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _client = new ConnectionHubClient(NavigationManager);

            await _client.Connection.SendAsync("GetCurrentLobbies");
    /*
         * Method receives, from the server, a List with all current Lobbies as a LobbyList Object
         */
            _client.Connection.On<string>("ReceiveCurrentLobbies", (list) =>
            {
                try
                {
                    var settings = new JsonSerializerSettings()
                    {
                        TypeNameHandling = TypeNameHandling.All
                    };
                    _list.Lobbies = JsonConvert.DeserializeObject<List<ILobby>>(list, settings);
                }
                catch (JsonException e)
                {
                    Console.WriteLine("_______TSSSSS there is an error, again: "+e);
                }
                StateHasChanged();
            });
            
            if ((User = await ProtectedSessionStore.GetAsync<HumanPlayer>("LoginData")) == null)
            {
                User = new HumanPlayer();
            }
            StateHasChanged();
        }
    }
    
    private void DirectToAccount()
    {
        NavigationManager.NavigateTo("/user/" + User.ID);
    }

}