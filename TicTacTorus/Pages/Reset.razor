@page "/reset"
@using TicTacTorus.Source.LoginContent.Validation
@using TicTacTorus.Source.Hubs
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager


<div class="min-vw-100">
    <div class="my-5 lobbies-grid">
        <h1 class="headers">TicTacTorus</h1>
    </div>
</div>
<div class="row">
    <div class="col-sm-9 col-md-7 col-lg-4 mx-auto my-1">
        <!-- Players Box -->
        <div class="box box-info w-100">
            <div class="box-content">
                <b><h3 class="text-center">Password Reset</h3></b>
                <div>
                    <div class="text-center">Password for user <b id="username"></b> gets changed</div>
                    <div class="container">
                        <EditForm Model="@_validation" OnInvalidSubmit="CheckForm">
                            <div class="form-group">
                                <label class="password_reset" for="psw">Password</label>
                                <input @bind-value="_validation.Password" type="password" id="psw" name="psw" title="Enter new password" placeholder="Enter new password" required>
                            </div>
                            <div class="form-group">
                                <label class="password_reset" for="psw">Confirm Password</label>
                                <input @bind-value="_validation.PasswordConfirm" type="password" id="conf-psw" name="conf-psw" title="Enter password again" placeholder="Enter new password again" required>
                            </div>
                            <label class="text-center collapse" id="wrong_conf-psw">
                                Passwords don't match!
                            </label>
                            <button class="btn btn-primary-custom" type="submit">Submit</button>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code{
    private ConnectionHubClient _client;
    private readonly UserValidation _validation = new UserValidation();
}

@functions
{
    protected override void OnInitialized()
    {
        _client = new ConnectionHubClient(NavigationManager);

        /*
         * Method receives bool from server if validation was successful
         */
        _client.Connection.On<bool>("ValidationResult", (valid) =>
        {

        });
    }

    private void CheckForm()
    {
        //TODO: Validate at Server (just in case) the password
    }
}
